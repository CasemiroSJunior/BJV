// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int      @id @default(autoincrement())
  tipo       Int
  senha      String
  foto       String?
  created_At DateTime @default(now())
  updated_At DateTime @default(now())

  Funcionarios    Funcionarios[]
  Alunos          Alunos[]
  Empresas        Empresas[]
  inscricoes_vaga inscricoes_vaga[]
}

model Alunos {
  usersId Int @id

  nome            String
  rm              Int      @unique
  data_nascimento DateTime
  cpf             String   @unique
  celular         String?
  telefone        String?
  email           String

  status Int @default(0)

  curso_tecnico_Id      Int?
  curso_ensino_medio_Id Int?

  curso_tecnico cursos_tecnicos?     @relation(fields: [curso_tecnico_Id], references: [id])
  ensino_medio  cursos_ensino_medio? @relation(fields: [curso_ensino_medio_Id], references: [id])
  user          Users                @relation(fields: [usersId], references: [id])
}

model Funcionarios {
  usersId Int     @id
  nome    String
  cpf     String  @unique
  celular String?
  email   String

  status Int @default(0)

  user Users @relation(fields: [usersId], references: [id])
}

model Empresas {
  usersId       Int     @id
  nome_fantasia String
  cnpj          String  @unique
  celular       String?
  telefone      String?
  email         String?

  status Int @default(0)

  user         Users   @relation(fields: [usersId], references: [id])
  vagasCriadas vagas[]
}

model cursos_tecnicos {
  id      Int     @id @default(autoincrement())
  nome    String
  duracao Int?
  periodo String?
  status  Int     @default(0)

  Alunos Alunos[]
}

model cursos_ensino_medio {
  id      Int     @id @default(autoincrement())
  nome    String
  duracao Int?
  periodo String?
  status  Int     @default(0)

  Alunos Alunos[]
}

model vagas {
  id         Int     @id @default(autoincrement())
  titulo     String
  descricao  String?
  salario    Float?
  tipo       Int     @default(0)
  remunerado Int     @default(0)
  confidencial_nome Int  @default(0)
  confidencial_salario Int  @default(0)

  status Int @default(1)

  empresasUsersId Int?

  data_inicio  DateTime
  data_termino DateTime

  created_At DateTime @default(now())
  updated_At DateTime @default(now())

  inscricoes_vaga inscricoes_vaga[]
  Empresas        Empresas?         @relation(fields: [empresasUsersId], references: [usersId])
}

model inscricoes_vaga {
  id      Int @id @default(autoincrement())
  usersId Int
  vagasId Int

  created_At DateTime @default(now())
  updated_At DateTime @default(now())

  user  Users @relation(fields: [usersId], references: [id])
  vagas vagas @relation(fields: [vagasId], references: [id])

  @@unique([usersId, vagasId])
}
